{"version":3,"sources":["components/Link.js","components/Footer.js","components/NavBar.js","components/CreateNewAccount.js","components/LoginModal.js","components/Transform.js","components/ParserComp.js","components/TestStyledComp.js","components/Modal.js","components/Form.js","components/TypeWriter.js","components/Type.js","App.js","reportWebVitals.js","index.js"],"names":["links","icon","DiGithubBadge","label","href","IoLogoTwitter","IoLogoLinkedin","MdEmail","FaYoutube","FooterLink","display","aria-label","isExternal","as","fontSize","color","Footer","mt","textAlign","px","className","rel","target","isTruncated","direction","spacing","justify","map","link","NavBar","Component","props","close","setState","showModal","open","state","clicked","form","handleclicklogin","bind","e","this","isLoggedIn","role","aria-hidden","type","onClick","transformRules","self","rules","result","forEach","rule","obj","name","mediaNameGenerator","media","__expression__","declarations","declaration","cleanProperty","cleanPropertyName","property","value","selectors","selector","nameGenerator","trim","replace","v","toUpperCase","transform","inputCssText","Error","bootstrapWithCssClass","indexOf","cssParser","parse","stylesheet","Input","prevProps","node","ReactDOM","findDOMNode","oldLength","length","oldIdx","selectionStart","newIdx","Math","max","selectionEnd","undefined","React","TestComp","style","position","top","height","width","marginLeft","marginRight","float","Change","showHide","inputfrom","inputby","updateInput","handleSubmit","updateInputby","event","console","log","prevState","handleModalShowHide","Modal","marginTop","show","Header","onChange","placeholder","ar","index","split","Forms","handleChange","handleChange2","handleClick","handleTextTranslateChange","valueTr","textOrg","translatedText","disabled","StyledInfo","styled","update","inputTextUpdate","inputText","outputText","arguments","transformed","JSON","stringify","refs","useNewline","checked","error","ex","bool","dis","languageObj","English","French","Arabic","Espanol","fetch","method","body","q","source","headers","then","response","json","res","color_","margin","overflow","borderRadius","id","rows","cols","aria-required","required","bottom","left","right","ref","alt","navigator","clipboard","writeText","memo","loop","typeSpeed","deleteSpeed","delaySpeed","words","cursor","useState","speed","setSpeed","text","setText","isDeleting","useRef","counter","handleTyping","useCallback","current","word","prev","substring","useEffect","timer","setTimeout","clearTimeout","Type","pt","size","p","typespeed","App","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20cf38e7.chunk.js","sourcesContent":["import { IoLogoTwitter, IoLogoLinkedin } from \"react-icons/io\";\nimport { FaYoutube } from \"react-icons/fa\";\nimport { MdEmail } from \"react-icons/md\";\nimport { DiGithubBadge } from \"react-icons/di\";\n\nconst links = [\n  {\n    icon: DiGithubBadge,\n    label: \"GitHub\",\n    href: \"https://github.com/th-rpy\",\n  },\n  {\n    icon: IoLogoTwitter,\n    label: \"Twitter\",\n    href: \"https://twitter.com/thesegunadebayo\",\n  },\n  {\n    icon: IoLogoLinkedin,\n    label: \"LinkedIn\",\n    href: \"https://www.linkedin.com/in/thamer-saraei-472300124/\",\n  },\n  {\n    icon: MdEmail,\n    label: \"Email\",\n    href: \"mailto:thamer.saraei@polymtl.ca\",\n  },\n  {\n    icon: FaYoutube,\n    label: \"YouTube\",\n    href: \"https://www.youtube.com/channel/UC8Dt8pO_EqhP9unfnMd-64A/videos\",\n  },\n];\n\nexport default links;\n","import React from \"react\";\nimport { Box, Icon, Text, Stack, Link } from \"@chakra-ui/react\";\n\nimport links from \"./Link\";\n\nconst FooterLink = ({ icon, href, label }) => (\n  <Link display=\"inline-block\" href={href} aria-label={label} isExternal>\n    <Icon as={icon} fontSize=\"xl\" color=\"gray.400\" />\n  </Link>\n);\n\nexport const Footer = () => (\n  <Box as=\"footer\" mt={12} textAlign=\"center\">\n    <Text fontSize=\"md\" px=\"1rem\" className=\"i\" color=\"gray.600\">\n      <span>\n        Made with Love 💜 using{\" \"}\n        <a href=\"https://reactjs.org/\" rel=\"noreferrer\" target=\"_blank\">\n          ReactJs.\n        </a>\n      </span>\n    </Text>\n    <Text px=\"1rem\" className=\"i\" color=\"gray.500\" fontSize=\"md\" isTruncated>\n      Thank you for supporting me!\n    </Text>\n    <Stack mt={4} direction=\"row\" spacing=\"12px\" justify=\"center\">\n      {links.map((link) => (\n        <FooterLink key={link.href} {...link} />\n      ))}\n    </Stack>\n  </Box>\n);\n\nexport default Footer;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { Component } from \"react\";\nimport \"bulma/css/bulma.css\";\nimport Login from \"./LoginModal\"\nimport {\n    Navbar,\n    NavDropdown,\n    MenuItem,\n    NavItem,\n    Nav,\n    Popover,\n    Tooltip,\n    Button,\n    Modal,\n    OverlayTrigger\n  } from 'react-bootstrap';\nconst styles = {\n    fontFamily: 'sans-serif',\n    textAlign: 'center',\n  };\n  \nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {clicked: false,  showModal : false,\n        form : ''};\n   \n    this.handleclicklogin = this.handleclicklogin.bind(this);\n  }\n  handleclicklogin (e){\n    this.setState({clicked: true})\n  }\n  close = () => {\n    this.setState ({ showModal: false });\n  }\n\n\n\n  open = () => {\n    this.setState ({ showModal : true});\n  }\n  render() {\n      const {clicked} = this.state;\n      const isLoggedIn = this.state.isLoggedIn;\n    return (\n      <div>\n        <nav\n          className=\"navbar is-white\"\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"navbar-brand\">\n            <a className=\"navbar-item\" href=\"#\">\n              {\" \"}\n              <span className=\"tag is-info is-large\">Translate App</span>{\" \"}\n            </a>\n\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <button className=\"button is-primary is-outlined\">\n                  <span>Sign up</span>\n                </button>\n                <button className=\"button is-primary is-outlined\" type=\"submit\" onClick={this.handleclicklogin}>\n                  Log in\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <button className=\"button is-primary\">\n                <span className=\"icon\">\n                  <i className=\"fab fa-twitter\"></i>\n                </span>\n                <span>@GitHub</span>\n              </button>\n            </div>\n          </div>\n        </nav>\n        \n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  MenuItem,\r\n  NavItem,\r\n  Nav,\r\n  Popover,\r\n  Tooltip,\r\n  Button,\r\n  Modal,\r\n  OverlayTrigger\r\n} from 'react-bootstrap';\r\n\r\nclass CreateNewAccount extends Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div>\r\n          <form className=\"form-horizontal form-loanable\">\r\n            <div className=\"alert alert-danger alert-sm\">\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n              <span className=\"fw-semi-bold\">Error:</span> Login failed.\r\n              </div>\r\n            <fieldset>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"login-email\" className=\"col-sm-5\">Username or email</label>\r\n                <div className=\"col-sm-7\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"login-email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter username or email\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                { /* console.log('error email ::: ' + JSON.stringify(errors)) */}\r\n              </div>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"login-password\" className=\"col-sm-5\">Password</label>\r\n                <div className=\"col-sm-7\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <div className=\"login-password-wrapper\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"login-password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"*****\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                    />\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"form-action\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-left\">Enter <span className=\"icon-arrow-right2 outlined\"></span></button>\r\n\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n        <a\r\n          href=\"#\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            this.setMode(\"login\");\r\n          }}\r\n        >\r\n          Log in here\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateNewAccount;","import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavDropdown,\r\n  MenuItem,\r\n  NavItem,\r\n  Nav,\r\n  Popover,\r\n  Tooltip,\r\n  Button,\r\n  Modal,\r\n  OverlayTrigger\r\n} from \"react-bootstrap\";\r\n\r\nimport CreateNewAccount from \"./CreateNewAccount\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showModal: false,\r\n      smShow: false,\r\n      email: \"\",\r\n      password: \"\",\r\n      mode: \"login\"\r\n    };\r\n  }\r\n\r\n  setMode = mode => {\r\n    this.setState({\r\n      mode\r\n    });\r\n  };\r\n\r\n  renderForgot = () => {\r\n    return(\r\n      <div>\r\n        <p>inside of forgot! :) </p>\r\n        <a\r\n          href=\"#\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            this.setMode(\"login\");\r\n          }}\r\n        >\r\n          Back to login\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  renderRegister = () => {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <form className=\"form-horizontal form-loanable\">\r\n            <div className=\"alert alert-danger alert-sm\">\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n              <span className=\"fw-semi-bold\">Error:</span> Login failed.\r\n              </div>\r\n            <fieldset>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"login-email\" className=\"col-sm-5\">Username or email</label>\r\n                <div className=\"col-sm-7\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"login-email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter username or email\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                { /* console.log('error email ::: ' + JSON.stringify(errors)) */}\r\n              </div>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"login-password\" className=\"col-sm-5\">Password</label>\r\n                <div className=\"col-sm-7\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <div className=\"login-password-wrapper\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"login-password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"*****\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                    />\r\n                    \r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"form-action\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-left\">Enter <span className=\"icon-arrow-right2 outlined\"></span></button>\r\n              \r\n            </div>\r\n          </form>\r\n        \r\n        </div>\r\n        <a\r\n          href=\"#\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            this.setMode(\"login\");\r\n          }}\r\n        >\r\n          Log in here\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderLogin = () => {\r\n    return (\r\n      <div>\r\n          <form className=\"form-horizontal form-loanable\">\r\n            <div className=\"alert alert-danger alert-sm\">\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n              <span className=\"fw-semi-bold\">Error:</span> Login failed.\r\n              </div>\r\n            <fieldset>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"login-email\" className=\"col-sm-5\">Username or email</label>\r\n                <div className=\"col-sm-7\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    id=\"login-email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter username or email\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.email}\r\n                    required\r\n                  />\r\n                </div>\r\n                { /* console.log('error email ::: ' + JSON.stringify(errors)) */}\r\n              </div>\r\n              <div className=\"form-group has-feedback required\">\r\n                <label htmlFor=\"login-password\" className=\"col-sm-5\">Password</label>\r\n                <div className=\"col-sm-7\">\r\n                  <span className=\"form-control-feedback\" aria-hidden=\"true\"></span>\r\n                  <div className=\"login-password-wrapper\">\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"login-password\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"*****\"\r\n                      required\r\n                      onChange={this.onChange}\r\n                      value={this.state.password}\r\n                    />\r\n                    <a\r\n                      href=\"#\"\r\n                      onClick={e => {\r\n                        e.preventDefault();\r\n                        this.setMode(\"forgot\");\r\n                      }}\r\n                    >\r\n                      Forgot Password\r\n                     </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"form-action\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-left\">Enter <span className=\"icon-arrow-right2 outlined\"></span></button>\r\n            </div>\r\n          </form>\r\n       <a\r\n          href=\"#\"\r\n          onClick={e => {\r\n            e.preventDefault();\r\n            this.setMode(\"register\");\r\n          }}\r\n        >\r\n        Create your account\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          show={this.props.showModal}\r\n          onHide={this.props.onClose}\r\n          onSubmit={this.onSubmit}\r\n          bsSize=\"large\"\r\n        >\r\n          <Modal.Header closeButton={true}>\r\n            <h2>{ this.state.mode === \"login\" ? \"Login\" : this.state.mode === \"register\" ? \"Register\" : \"Forgot Password\" }</h2>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {this.state.mode === \"login\" ? (this.renderLogin()) : this.state.mode === \"register\" ? (this.renderRegister()) : (this.renderForgot())}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.props.onClose}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n\r\n","import cssParser from \"css\";\n\n//\n// Transform implementation or originally thanks to\n// https://github.com/raphamorim/native-css\n//\n\nfunction transformRules(self, rules, result) {\n  rules.forEach(function (rule) {\n    var obj = {};\n    if (rule.type === \"media\") {\n      var name = mediaNameGenerator(rule.media);\n      var media = (result[name] = result[name] || {\n        __expression__: rule.media,\n      });\n      transformRules(self, rule.rules, media);\n    } else if (rule.type === \"rule\") {\n      rule.declarations.forEach(function (declaration) {\n        if (declaration.type === \"declaration\") {\n          var cleanProperty = cleanPropertyName(declaration.property);\n          obj[cleanProperty] = declaration.value;\n        }\n      });\n      rule.selectors.forEach(function (selector) {\n        var name = nameGenerator(selector.trim());\n        result[name] = obj;\n      });\n    }\n  });\n}\n\nvar cleanPropertyName = function (name) {\n  // turn things like 'align-items' into 'alignItems'\n  name = name.replace(/(-.)/g, function (v) {\n    return v[1].toUpperCase();\n  });\n\n  return name;\n};\n\nvar mediaNameGenerator = function (name) {\n  return \"@media \" + name;\n};\n\nvar nameGenerator = function (name) {\n  name = name.replace(/\\s\\s+/g, \" \");\n  name = name.replace(/[^a-zA-Z0-9]/g, \"_\");\n  name = name.replace(/^_+/g, \"\");\n  name = name.replace(/_+$/g, \"\");\n\n  return name;\n};\n\nexport function transform(inputCssText) {\n  if (!inputCssText) {\n    throw new Error(\"missing css text to transform\");\n  }\n\n  // If the input \"css\" doesn't wrap it with a css class (raw styles)\n  // we need to wrap it with a style so the css parser doesn't choke.\n  var bootstrapWithCssClass = false;\n  if (inputCssText.indexOf(\"{\") === -1) {\n    bootstrapWithCssClass = true;\n    inputCssText = `.bootstrapWithCssClass { ${inputCssText} }`;\n  }\n\n  var css = cssParser.parse(inputCssText);\n  var result = {};\n  transformRules(this, css.stylesheet.rules, result);\n\n  // Don't expose the implementation detail of our wrapped css class.\n  if (bootstrapWithCssClass) {\n    result = result.bootstrapWithCssClass;\n  }\n\n  return result;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { transform } from \"./Transform.js\";\n\nclass Input extends React.Component {\n  componentDidUpdate(prevProps) {\n    var node = ReactDOM.findDOMNode(this);\n    var oldLength = node.value.length;\n    var oldIdx = node.selectionStart;\n    node.value = this.props.value;\n    var newIdx = Math.max(0, node.value.length - oldLength + oldIdx);\n    node.selectionStart = node.selectionEnd = newIdx;\n  }\n\n  render() {\n    return <textarea {...this.props} value={undefined} />;\n  }\n}\n\nvar sampleCSS = `\n      width: 5vh;\n      height: 5vh;\n      border-radius: 50%;\n      background: #dfdfc2;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      -webkit-transform: translate(-50%, -50%);\n              transform: translate(-50%, -50%);\n      -webkit-animation: leftEyeAnimation 3s infinite cubic-bezier(0.455, 0.03, 0.515, 0.955);\n              animation: leftEyeAnimation 3s infinite cubic-bezier(0.455, 0.03, 0.515, 0.955);\n`;\n\nvar initialStarterText = \"\";\n\nexport default class Parser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.update = this.update.bind(this);\n    this.inputTextUpdate = this.inputTextUpdate.bind(this);\n\n    this.state = {\n      inputText: initialStarterText,\n    };\n  }\n\n  componentDidMount() {\n    // TODO: remove me...\n    this.update();\n  }\n\n  inputTextUpdate(e) {\n    this.setState(\n      {\n        inputText: e.target.value,\n      },\n      () => {\n        this.update();\n      }\n    );\n  }\n\n  update() {\n    console.log(\"update\", arguments);\n\n    if (this.state.inputText === initialStarterText) {\n      this.setState({\n        inputText: initialStarterText,\n        error: null,\n      });\n      return;\n    }\n\n    try {\n      var transformed = transform(this.state.inputText);\n\n      var result = JSON.stringify(\n        transformed,\n        null,\n        this.refs.useNewline.checked ? 2 : 0\n      );\n      this.setState({\n        outputText: result,\n        error: null,\n      });\n    } catch (ex) {\n      this.setState({\n        error: ex,\n      });\n    }\n  }\n\n  render() {\n    const textAreaStyles = {\n      width: \"48%\",\n      height: \"300px\",\n    };\n    const outputCssStyle = { ...textAreaStyles };\n    const inputCssStyle = { ...textAreaStyles };\n\n    if (this.state.error) {\n      outputCssStyle.backgroundColor = \"lightcoral\";\n    }\n\n    console.log(\"state\", this.state);\n    var inputText = this.state.inputText;\n    var outputText = this.state.error || this.state.outputText;\n\n    return (\n      <div>\n        <div style={{ textAlign: \"right\" }}>\n          <button\n            style={{ width: \"70px\" }}\n            className=\"output-css-button copy-to-clipboard\"\n            data-clipboard-target=\"#outputCss\"\n          >\n            Copy to Clipboard\n          </button>\n          <input\n            style={{ marginLeft: \"15px\" }}\n            aria-label=\"Format\"\n            ref=\"useNewline\"\n            alt=\"Formats the react JSON below.\"\n            type=\"checkbox\"\n            onChange={this.update}\n          />\n          <span style={{ marginRight: \"10px\" }}>Format</span>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <Input\n            name=\"inputCss\"\n            aria-label=\"Input CSS\"\n            ref=\"inputCss\"\n            placeholder=\"Type or paste CSS here...\"\n            style={inputCssStyle}\n            onChange={this.inputTextUpdate}\n            value={inputText}\n          />\n          <textarea\n            id=\"outputCss\"\n            aria-label=\"Output React JSON\"\n            name=\"outputCss\"\n            ref=\"outputCss\"\n            style={outputCssStyle}\n            value={outputText}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport \"bulma/css/bulma.css\";\n\nclass TestComp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div\n        className=\"modal is-active\"\n        style={{\n          position: \"absolute\",\n          top: \"35%\",\n          fontSize: \"10px\",\n          height: \"49rem\",\n          width: \"20%\",\n          marginLeft: \"78%\",\n          marginRight: \"18%\",\n          float: \"left\",\n          color: \"#4a4e69\",\n        }}\n      >\n        <div className=\"card\">\n          <header className=\"card-header\">\n            <p className=\"card-header-title\" style={{ color: \"#ff0a54\" }}>\n              {\" \"}\n              Test Component\n            </p>\n          </header>\n          <div className=\"card-content\">\n            <strong style={this.props.style}>\n              React is one of the most popular JavaScript frameworks ever\n              created, and I believe that it's one of the best tools out there..\n            </strong>\n            <p>S. Thamer</p>\n          </div>\n          <footer className=\"card-footer\">\n            <p className=\"card-footer-item\">\n              <span>\n                <a href=\"#\">Edit</a>\n              </span>\n            </p>\n            <p className=\"card-footer-item\">\n              <span>\n                <a href=\"#\">Copy</a>\n              </span>\n            </p>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TestComp;\n","import React from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"bulma/css/bulma.css\";\n\nclass Change extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showHide: false,\n      obj: [],\n      inputfrom: \"\",\n      inputby: \"\",\n    };\n    this.updateInput = this.updateInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateInputby = this.updateInputby.bind(this);\n  }\n\n  handleModalShowHide() {\n    this.setState({ showHide: !this.state.showHide });\n  }\n\n  updateInput(event) {\n    this.setState({ inputfrom: event.target.value });\n  }\n  updateInputby(event) {\n    this.setState({ inputby: event.target.value });\n  }\n\n  handleSubmit() {\n    console.log(\"Your input from is: \" + this.state.inputfrom);\n    this.setState((prevState) => ({\n      obj: [...prevState.obj, this.state.inputfrom + \":\" + this.state.inputby],\n      inputby: \"\",\n      inputfrom: \"\",\n    }));\n    //Send state to the server code\n  }\n\n  render() {\n    const { obj, inputfrom, inputby } = this.state;\n    return (\n      <div\n        className=\"modal is-active\"\n        style={{\n          position: \"absolute\",\n          top: \"0%\",\n          fontSize: \"8px\",\n          height: \"33rem\",\n          width: \"20%\",\n          marginLeft: \"82%\",\n          marginRight: \"18%\",\n          float: \"left\",\n        }}\n      >\n        <button\n          className=\"button is-normal\"\n          onClick={() => this.handleModalShowHide()}\n        >\n          Glossary\n        </button>\n\n        <Modal\n          style={{\n            position: \"absolute\",\n            top: \"3%\",\n            fontSize: \"10px\",\n            height: \"44rem\",\n            width: \"20%\",\n            marginLeft: \"78%\",\n            marginRight: \"18%\",\n            marginTop: \"1%\",\n            float: \"top\",\n          }}\n          show={this.state.showHide}\n        >\n          <Modal.Header>\n            <div className=\"modal is-active is-small\">\n              <div className=\"modal-background\"></div>\n              <div className=\"modal-card\">\n                <header className=\"modal-card-head\">\n                  <h1 className=\"modal-card-title\">Glossary</h1> <br />\n                  <h3 className=\"modal-card-title\">Add your Dictionary</h3>\n                  <button\n                    onClick={() => this.handleModalShowHide()}\n                    className=\"delete\"\n                    aria-label=\"close\"\n                  ></button>\n                </header>\n                <section className=\"modal-card-body\">\n                  <strong>Replace: </strong>{\" \"}\n                  <input\n                    className=\"\"\n                    type=\"text\"\n                    onChange={this.updateInput}\n                    value={inputfrom}\n                    placeholder=\"ex. : Maler\"\n                  />\n                  {\"  🔀  ⏩  🔀    \"} <strong> By :</strong>{\" \"}\n                  <input\n                    className=\"\"\n                    type=\"text\"\n                    value={inputby}\n                    onChange={this.updateInputby}\n                    placeholder=\"ex. : Artist\"\n                  />\n                  <br />\n                  <br />\n                  {obj.map((ar, index) => (\n                    <div className=\"box is-small\">\n                      <p style={{ color: \"#000814\", fontSize: \"15px\" }}>\n                        {index +\n                          \".  \" +\n                          ar.split(\":\")[0] +\n                          \"  \" +\n                          \" ⏩  ⏩ \" +\n                          ar.split(\":\")[1]}\n                      </p>{\" \"}\n                    </div>\n                  ))}\n                </section>\n                <footer className=\"modal-card-foot\">\n                  <button\n                    className=\"button is-success \"\n                    onClick={this.handleSubmit}\n                  >\n                    Save\n                  </button>\n\n                  <button\n                    onClick={() => this.handleModalShowHide()}\n                    className=\"button is-danger is-outlined\"\n                  >\n                    Close\n                  </button>\n                </footer>\n              </div>\n            </div>\n          </Modal.Header>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Change;\n","/*import {\n  Text,\n  Input,\n  Box,\n  Select,\n  InputGroup,\n  InputRightElement,\n  Textarea,\n} from \"@chakra-ui/react\";\nimport { SearchIcon, Search2Icon } from \"@chakra-ui/icons\";\nimport Typewriter from \"./TypeWriter\";\nimport TextareaAutosize from \"react-textarea-autosize\";*/\n\nimport React from \"react\";\n/*import { FormTextarea } from \"shards-react\";\nimport { FormSelect } from \"shards-react\";\nimport { Button } from \"shards-react\";*/\nimport \"bulma/css/bulma.css\";\nimport Parser from \"./ParserComp\";\nimport ReactDOM from \"react-dom\";\nimport TestComp from \"./TestStyledComp\";\nimport Change from \"./Modal\";\n\nimport { transform } from \"./Transform.js\";\n\nclass Input extends React.Component {\n  componentDidUpdate(prevProps) {\n    var node = ReactDOM.findDOMNode(this);\n    var oldLength = node.value.length;\n    var oldIdx = node.selectionStart;\n    node.value = this.props.value;\n    var newIdx = Math.max(0, node.value.length - oldLength + oldIdx);\n    node.selectionStart = node.selectionEnd = newIdx;\n  }\n\n  render() {\n    return <textarea {...this.props} value={undefined} />;\n  }\n}\n\nvar sampleCSS = `\n      width: 5vh;\n      height: 5vh;\n      border-radius: 50%;\n      background: #dfdfc2;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      -webkit-transform: translate(-50%, -50%);\n              transform: translate(-50%, -50%);\n      -webkit-animation: leftEyeAnimation 3s infinite cubic-bezier(0.455, 0.03, 0.515, 0.955);\n              animation: leftEyeAnimation 3s infinite cubic-bezier(0.455, 0.03, 0.515, 0.955);\n`;\n\nvar initialStarterText = \"\";\n\nexport default class Forms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTextTranslateChange = this.handleTextTranslateChange.bind(this);\n    this.state = { value: null };\n    this.state = { valueTr: null };\n    this.state = { textOrg: \"\" };\n    this.state = { translatedText: \"\" };\n    this.state = { clicked: false };\n    this.state = { disabled: true };\n    this.state = { StyledInfo: false };\n    this.state = { styled: { color: \"red\" } };\n\n    this.update = this.update.bind(this);\n    this.inputTextUpdate = this.inputTextUpdate.bind(this);\n\n    this.state = {\n      inputText: initialStarterText,\n    };\n  }\n\n  componentDidMount() {\n    // TODO: remove me...\n    this.update();\n  }\n\n  inputTextUpdate(e) {\n    if (e.target.value == \"\") {\n      this.setState({ outputText: \"\" });\n    }\n    this.setState(\n      {\n        inputText: e.target.value,\n      },\n      () => {\n        this.update();\n      }\n    );\n  }\n\n  update() {\n    console.log(\"update\", arguments);\n\n    if (this.state.inputText === initialStarterText) {\n      this.setState({\n        inputText: initialStarterText,\n        error: null,\n      });\n      return;\n    }\n\n    try {\n      var transformed = transform(this.state.inputText);\n\n      var result = JSON.stringify(\n        transformed,\n        null,\n        this.refs.useNewline.checked ? 2 : 0\n      );\n      this.setState({\n        outputText: result,\n        error: null,\n      });\n    } catch (ex) {\n      this.setState({\n        error: ex,\n      });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value,\n      textOrg: \"\",\n      translatedText: \"\",\n      outputText: \"\",\n      inputText: \"\",\n      error: \"\",\n    });\n    let bool = e.target.value == \"🤡CSS\" ? false : true;\n    let v = e.target.value == \"🤡CSS\" ? \"⚛️React\" : null;\n    this.setState({ disabled: bool, valueTr: v });\n    let dis = e.target.value == \"🤡CSS\" ? true : false;\n    this.setState({ StyledInfo: dis });\n  }\n  handleChange2(e) {\n    this.setState({ valueTr: e.target.value, translatedText: \"\" });\n  }\n\n  handleTextTranslateChange(e) {\n    this.setState({ textOrg: e.target.value });\n  }\n\n  handleClick() {\n    // eslint-disable-next-line no-unused-expressions\n    this.state.value == null || this.state.valueTr == null\n      ? this.setState({ clicked: false })\n      : null;\n    this.state.value === this.state.valueTr\n      ? this.setState({ translatedText: this.state.textOrg, clicked: true })\n      : this.setState({ clicked: true });\n    let languageObj = {\n      English: \"en\",\n      French: \"fr\",\n      Arabic: \"ar\",\n      Espanol: \"es\",\n    };\n    const response = fetch(\"https://libretranslate.com/translate\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        q: this.state.textOrg,\n        source: languageObj[this.state.value],\n        target: languageObj[this.state.valueTr],\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((res) => this.setState({ translatedText: res.translatedText }));\n  }\n\n  render() {\n    const {\n      value,\n      valueTr,\n      textOrg,\n      translatedText,\n      disabled,\n      StyledInfo,\n      styled,\n    } = this.state;\n    const color_ = value && valueTr ? \"#72efdd\" : \"#ffadad\";\n\n    console.log(\"state\", this.state);\n    var inputText = this.state.inputText;\n    var outputText = this.state.error || this.state.outputText;\n\n    return (\n      <div>\n        <strong className=\"mb-2\" style={{ color: color_ }}>\n          {value && valueTr\n            ? \"From : \" +\n              (value && `🗣 ${value}`) +\n              \" To : \" +\n              (valueTr && `🗣 ${valueTr}`)\n            : \"🤔 Waiting for you to say something...\"}\n        </strong>\n        <br /> <br />\n        <div style={{ height: \"50em\", width: \"100%\", margin: \"auto\" }}>\n          {value ? (\n            <div\n              style={{\n                height: \"30rem\",\n                width: \"20%\",\n                marginLeft: \"5%\",\n                marginRight: \"0%\",\n                float: \"left\",\n              }}\n            >\n              <textarea\n                style={{\n                  overflow: \"hidden\",\n                  fontSize: \"18px\",\n                  borderRadius: \"10px\",\n                }}\n                id=\"edd-reviews-review\"\n                name=\"edd-reviews-review\"\n                rows=\"11\"\n                cols=\"60\"\n                aria-required=\"true\"\n                required=\"required\"\n                onChange={\n                  value != \"🤡CSS\"\n                    ? this.handleTextTranslateChange\n                    : this.inputTextUpdate\n                }\n                value={value != \"🤡CSS\" ? textOrg : inputText}\n                placeholder={\n                  \"Here, Type Your \" + value + \" Text To Translate ...\"\n                }\n              ></textarea>{\" \"}\n            </div>\n          ) : (\n            <div\n              style={{\n                height: \"30rem\",\n                width: \"20%\",\n                marginLeft: \"10%\",\n                marginRight: \"0%\",\n                float: \"left\",\n              }}\n            >\n              <br />\n              <br /> <br />\n              <br />\n              <button className=\"delete\"> </button>\n              <span className=\"icon has-text-info\">\n                <i className=\"fas fa-info-circle\"></i>\n              </span>\n              <strong>Your Text ...</strong>\n            </div>\n          )}\n\n          <div\n            style={{\n              width: \"50x\",\n              height: \"100px\",\n\n              position: \"absolute\",\n              top: \"0\",\n              bottom: \"0\",\n              left: \"0\",\n              right: \"0\",\n\n              margin: \"auto\",\n            }}\n          >\n            <div className=\"select is-primary is-small\">\n              <select className=\"select\" onChange={this.handleChange}>\n                <option value=\"Select Language\">Translate from...</option>\n                <option value=\"English\">English</option>\n                <option value=\"French\">French</option>\n                <option value=\"Arabic\">Arabic</option>\n                <option value=\"Espanol\">Espanol</option>\n                <option value=\"🤡CSS\">🤡CSS</option>\n              </select>\n            </div>\n            <strong>{\"👈__👀__👉\"}</strong>\n            <div className=\"select is-primary is-small\">\n              <select\n                onChange={this.handleChange2}\n                value={valueTr}\n                className=\"select\"\n              >\n                <option value=\"default\">Translate into...</option>\n                <option value=\"English\" disabled={false}>\n                  English\n                </option>\n                <option value=\"French\" disabled={false}>\n                  French\n                </option>\n                <option value=\"Arabic\" disabled={false}>\n                  Arabic\n                </option>\n                <option value=\"Espanol\" disabled={false}>\n                  Español\n                </option>\n                <option value=\"⚛️React\" disabled={disabled}>\n                  ⚛️React\n                </option>\n              </select>\n            </div>\n          </div>\n          <div\n            style={{\n              width: \"50x\",\n              height: \"25px\",\n\n              position: \"absolute\",\n              top: \"0\",\n              bottom: \"0\",\n              left: \"0\",\n              right: \"0\",\n\n              margin: \"auto\",\n            }}\n          >\n            {value != \"🤡CSS\" && valueTr != \"⚛️React\" ? (\n              <button\n                className=\"button is-primary is-outlined\"\n                onClick={this.handleClick}\n              >\n                Translate\n              </button>\n            ) : (\n              <div>\n                <br />\n                <string className=\"mb-2\" style={{ color: \"#ff6b6b\" }}>\n                  Convert 🔄,in Real Time, plain 🤡CSS into the <br></br>{\" \"}\n                  ⚛️React in-line style 💅 specific <br></br>JSON\n                  representation...\n                </string>\n              </div>\n            )}\n          </div>\n\n          {valueTr ? (\n            <div\n              style={{\n                height: \"50rem\",\n                width: \"20%\",\n                marginLeft: \"0%\",\n                marginRight: \"18%\",\n                float: \"right\",\n              }}\n            >\n              <textarea\n                style={{\n                  overflow: \"hidden\",\n                  fontSize: \"18px\",\n                  borderRadius: \"10px\",\n                }}\n                id=\"edd-reviews-review\"\n                name=\"edd-reviews-review\"\n                cols=\"60\"\n                rows=\"11\"\n                aria-required=\"true\"\n                required=\"required\"\n                // eslint-disable-next-line eqeqeq\n                value={\n                  value != \"🤡CSS\" && valueTr != \"⚛️React\"\n                    ? translatedText\n                    : outputText\n                }\n                placeholder={\"Here, You get Your Text in \" + valueTr}\n              ></textarea>{\" \"}\n              {value == \"🤡CSS\" && valueTr == \"⚛️React\" ? (\n                <div>\n                  <label className=\"checkbox\">\n                    <input\n                      style={{ marginLeft: \"12px\" }}\n                      aria-label=\"Format\"\n                      ref=\"useNewline\"\n                      alt=\"Formats the react JSON below.\"\n                      type=\"checkbox\"\n                      onChange={this.update}\n                    />\n                    <span style={{ marginRight: \"10px\" }}>Format</span>\n                  </label>{\" \"}\n                  <button\n                    onClick={() => {\n                      value != \"🤡CSS\" && valueTr != \"⚛️React\"\n                        ? navigator.clipboard.writeText(\n                            this.state.translatedText\n                          )\n                        : navigator.clipboard.writeText(this.state.outputText);\n                    }}\n                    className=\"button is-light\"\n                  >\n                    Copy\n                  </button>\n                </div>\n              ) : (\n                <button\n                  onClick={() => {\n                    value != \"🤡CSS\" && valueTr != \"⚛️React\"\n                      ? navigator.clipboard.writeText(this.state.translatedText)\n                      : navigator.clipboard.writeText(this.state.outputText);\n                  }}\n                  className=\"button is-light\"\n                >\n                  Copy\n                </button>\n              )}\n              <br />\n            </div>\n          ) : (\n            <div\n              style={{\n                height: \"50rem\",\n                width: \"12%\",\n                marginLeft: \"1%\",\n                marginRight: \"15%\",\n                float: \"right\",\n              }}\n            >\n              <br />\n              <br /> <br />\n              <br />\n              <button className=\"delete\"> </button>\n              <span className=\"icon has-text-info\">\n                <i className=\"fas fa-info-circle\"></i>\n              </span>\n              <strong> Translated Text.</strong>\n            </div>\n          )}\n          {!StyledInfo ? (\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"80%\",\n                left: \"38%\",\n                right: \"38%\",\n                textAlign: \"center\",\n                fontSize: \"14px\",\n              }}\n              // eslint-disable-next-line react/jsx-no-comment-textnodes\n            >\n              <article className=\"message is-info\">\n                <div className=\"message-body\">\n                  {\"\"}\n                  <ul>\n                    <li>\n                      <strong>1. </strong>Select the Target and source Language,\n                    </li>\n                    <li>\n                      <strong>2. </strong>Paste the Original Text,\n                    </li>\n                    <li>\n                      <strong>3. </strong>Click to Translate Button,\n                    </li>\n                    <li>\n                      <strong>4. </strong>Copy the translated Text,\n                    </li>\n                  </ul>\n                </div>\n              </article>\n            </div>\n          ) : (\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"80%\",\n                left: \"38%\",\n                right: \"38%\",\n                textAlign: \"center\",\n                fontSize: \"14px\",\n              }}\n              // eslint-disable-next-line react/jsx-no-comment-textnodes\n            >\n              <article className=\"message is-info\">\n                <div className=\"message-body\">\n                  {\"\"}\n                  <ul>\n                    <li>\n                      <strong>1. </strong>Paste or write the 🤡CSS code,\n                    </li>\n                    <li>\n                      <strong>2. </strong>Conversion will be done automatically,\n                    </li>\n                    <li>\n                      <strong>3. </strong>Format and Copy JSON representation,\n                    </li>\n                  </ul>\n                </div>\n              </article>\n            </div>\n          )}\n          {StyledInfo ? (\n            <TestComp\n              /*style={outputText=='' ? {color:'blue'}: JSON.parse(JSON.stringify(outputText))}*/\n              style={{ color: \"#4a4e69\" }}\n            ></TestComp>\n          ) : (\n            <Change></Change>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect, useCallback, memo, useRef } from \"react\";\n\nexport default memo(function Typewriter({\n  loop,\n  typeSpeed,\n  deleteSpeed,\n  delaySpeed,\n  words,\n  cursor,\n}) {\n  // State\n  const [speed, setSpeed] = useState(100);\n  const [text, setText] = useState(\"\");\n  // Refs\n  const isDeleting = useRef(false);\n  const counter = useRef(0);\n\n  const handleTyping = useCallback(() => {\n    const index = loop ? counter.current % words.length : counter.current;\n    const word = words[index];\n    setSpeed(typeSpeed || 100);\n\n    if (isDeleting.current) {\n      // Set stoping speed\n      setSpeed(deleteSpeed || 50);\n      // Move backwards\n      setText((prev) => word.substring(0, prev.length - 1));\n      // Move to the next word when text is empty\n      if (text === \"\") {\n        isDeleting.current = false;\n        counter.current = counter.current + 1;\n      }\n    } else {\n      // Move Forward\n      setText((prev) => word.substring(0, prev.length + 1));\n      // Word is completed\n      if (text === word) {\n        // if not loop just return\n        if (!loop) return;\n        // else set the speed delay and start over\n        setSpeed(delaySpeed || 1500);\n        isDeleting.current = true;\n      }\n    }\n  }, [delaySpeed, deleteSpeed, loop, text, typeSpeed, words]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => handleTyping(), speed);\n    return () => clearTimeout(timer);\n  }, [handleTyping, speed]);\n\n  return (\n    <>\n      <span>{text}</span>\n      {cursor && <span className=\"blinking-cursor\">|</span>}\n    </>\n  );\n});\n","import { Text, Box } from \"@chakra-ui/react\";\n/*import { SearchIcon, Search2Icon } from \"@chakra-ui/icons\";*/\nimport Typewriter from \"./TypeWriter\";\n\nconst Type = () => {\n  /*const title_size = { base: \"33px\", md: \"50px\", lg: \"55px\" };\n  const font_size = { base: \"16px\", md: \"18px\", lg: \"20px\" };*/\n\n  return (\n    <div>\n      <Box pt=\"80\" px=\"100\">\n        <div>\n          <Text\n            className=\"i\"\n            size=\"lg\"\n            fontSize=\"40px\"\n            p=\"4\"\n            color=\"#1282a2\"\n            textAlign=\"center\"\n            as=\"i\"\n            isTruncated\n          >\n            Paste your Text and Get your Translated Text in{\" \"}\n            <span style={{ color: \"#f72585\" }}>\n              <Typewriter\n                loop\n                cursor\n                typespeed={50}\n                deleteSpeed={50}\n                delaySpeed={1000}\n                words={[\"English\", \"French\", \"Arabic\", \"React!\"]}\n              />\n            </span>\n          </Text>\n        </div>\n        <Text\n          className=\"i\"\n          size=\"md\"\n          fontSize=\"20px\"\n          p=\"10\"\n          color=\"#0A1128\"\n          textAlign=\"center\"\n          isTruncated\n        >\n          Welcome! To get started, paste your text/code into the box ...\n        </Text>\n      </Box>\n    </div>\n  );\n};\n\nexport default Type;\n","/*import logo from \"./logo.svg\";*/\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport NavBar from \"./components/NavBar\";\nimport Forms from \"./components/Form\";\nimport Type from \"./components/Type\";\n\nfunction App() {\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundColor: \"#ffffff\",\n        height: \"10%\",\n      }}\n    >\n      <NavBar></NavBar>\n      <Type />\n      <Forms></Forms>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}